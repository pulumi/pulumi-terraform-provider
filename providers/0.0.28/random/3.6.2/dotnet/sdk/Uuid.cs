// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Random
{
    [RandomResourceType("random:index/uuid:Uuid")]
    public partial class Uuid : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Arbitrary map of values that, when changed, will trigger recreation of resource. See the main provider documentation for
        /// more information.
        /// </summary>
        [Output("keepers")]
        public Output<ImmutableDictionary<string, string>?> Keepers { get; private set; } = null!;

        /// <summary>
        /// The generated uuid presented in string format.
        /// </summary>
        [Output("result")]
        public Output<string> Result { get; private set; } = null!;


        /// <summary>
        /// Create a Uuid resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Uuid(string name, UuidArgs? args = null, CustomResourceOptions? options = null)
            : base("random:index/uuid:Uuid", name, args ?? new UuidArgs(), MakeResourceOptions(options, ""), Utilities.PackageParameterization())
        {
        }

        private Uuid(string name, Input<string> id, UuidState? state = null, CustomResourceOptions? options = null)
            : base("random:index/uuid:Uuid", name, state, MakeResourceOptions(options, id), Utilities.PackageParameterization())
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Uuid resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Uuid Get(string name, Input<string> id, UuidState? state = null, CustomResourceOptions? options = null)
        {
            return new Uuid(name, id, state, options);
        }
    }

    public sealed class UuidArgs : global::Pulumi.ResourceArgs
    {
        [Input("keepers")]
        private InputMap<string>? _keepers;

        /// <summary>
        /// Arbitrary map of values that, when changed, will trigger recreation of resource. See the main provider documentation for
        /// more information.
        /// </summary>
        public InputMap<string> Keepers
        {
            get => _keepers ?? (_keepers = new InputMap<string>());
            set => _keepers = value;
        }

        public UuidArgs()
        {
        }
        public static new UuidArgs Empty => new UuidArgs();
    }

    public sealed class UuidState : global::Pulumi.ResourceArgs
    {
        [Input("keepers")]
        private InputMap<string>? _keepers;

        /// <summary>
        /// Arbitrary map of values that, when changed, will trigger recreation of resource. See the main provider documentation for
        /// more information.
        /// </summary>
        public InputMap<string> Keepers
        {
            get => _keepers ?? (_keepers = new InputMap<string>());
            set => _keepers = value;
        }

        /// <summary>
        /// The generated uuid presented in string format.
        /// </summary>
        [Input("result")]
        public Input<string>? Result { get; set; }

        public UuidState()
        {
        }
        public static new UuidState Empty => new UuidState();
    }
}
